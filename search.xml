<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Java中的常见bug</title>
    <url>/566fc1a4.html</url>
    <content><![CDATA[<!-- build time:Thu May 21 2020 12:07:14 GMT+0800 (GMT+08:00) --><p><img data-src="https://forpicgokkj.oss-cn-shenzhen.aliyuncs.com/img/20200521110651.png" alt=""></p><h3 id="BUG1：编码错误"><a href="#BUG1：编码错误" class="headerlink" title="BUG1：编码错误"></a>BUG1：编码错误</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="string">"这个问题是由于windows记事本以utf8格式保存java文件时，文件头部带了BOM。javac命令不能处理带有BOM的utf8文件，所以会将bom的三个字节，判断为非法字符。"</span></span><br></pre></td></tr></table></figure><h3 id="BUG2-amp-3-amp-4：语法错误"><a href="#BUG2-amp-3-amp-4：语法错误" class="headerlink" title="BUG2&amp;3&amp;4：语法错误"></a>BUG2&amp;3&amp;4：语法错误</h3><ul><li>错误写法</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyName</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [args])</span></span>&#123;</span><br><span class="line">        system.out.println(<span class="string">"zhangsan"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>正确写法</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyName</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"zhangsan"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><img data-src="https://forpicgokkj.oss-cn-shenzhen.aliyuncs.com/img/20200521111905.png" alt=""></p><h3 id="BUG5：大小写错误"><a href="#BUG5：大小写错误" class="headerlink" title="BUG5：大小写错误"></a>BUG5：大小写错误</h3><ul><li>我的java文件名为<code>myname.java</code>，然而在定义类的时候，类名为<code>MyName</code>，在java语言中，大小写的区分是很严格的，所以在以后的工作和学习中，一定要注意大小写。</li><li>程序包不存在的错误是因为错把<code>System</code>写成了<code>system</code>。</li></ul><!-- rebuild by neat -->]]></content>
      <categories>
        <category>Java技术笔记</category>
        <category>BUG处理</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>如何阅读一本书（3）</title>
    <url>/417613dd.html</url>
    <content><![CDATA[<!-- build time:Thu May 21 2020 12:07:14 GMT+0800 (GMT+08:00) --><h4 id="第五章-如何做一个自我要求的阅读者"><a href="#第五章-如何做一个自我要求的阅读者" class="headerlink" title="第五章    如何做一个自我要求的阅读者"></a>第五章 如何做一个自我要求的阅读者</h4><h5 id="一、四个基本问题"><a href="#一、四个基本问题" class="headerlink" title="一、四个基本问题"></a>一、四个基本问题</h5><ul><li><strong>主动阅读的核心</strong>：在阅读时提出问题来——在阅读过程中，提出自己必须尝试去回答的问题。<ol><li>整体来说，这本书到底在讲什么？</li><li>作者细部说了什么？怎么说的？</li><li>这本书说得有道理吗？是全部由道理还是部分有道理？</li><li>这本书跟我有什么关系？</li></ol></li></ul><h5 id="二、如何让一本书真正属于自己"><a href="#二、如何让一本书真正属于自己" class="headerlink" title="二、如何让一本书真正属于自己"></a>二、<strong>如何让一本书真正属于自己</strong></h5><ol><li><strong>写出言外之意</strong>——记笔记<ul><li>原因1：保持清醒</li><li>原因2：有助于思考</li><li>原因3：有利于记住作者的思想</li></ul></li></ol><h5 id="三、记笔记的方法"><a href="#三、记笔记的方法" class="headerlink" title="三、记笔记的方法"></a>三、<strong>记笔记的方法</strong></h5><ul><li><strong>画底线</strong>——在主要的重点，或重要又有力量的句子下画线</li><li><strong>在画底线处的栏外再加画一道底线</strong>——强调</li><li><strong>在空白处做星号或其他符号</strong>——慎用，只用来强调书中十来个最重要的声明或者段落</li><li><strong>在空白处编号</strong>——作者某个论点发展出一连串的重要论述时。</li><li><strong>在空白处记下其他的页码</strong>——强调作者在其他地方也有过同样的论点，或相关的要点，或是与此处观点不容的地方。</li><li><strong>将关键字或者句子圈出来</strong></li><li><strong>在书页的空白处做笔记</strong>——结合自己提出的问题写出相应的答案</li></ul><h5 id="四、三种做笔记的方法"><a href="#四、三种做笔记的方法" class="headerlink" title="四、三种做笔记的方法"></a>四、<strong>三种做笔记的方法</strong></h5><ol><li><p><strong>结构笔记</strong>——主要的重点在于全书的架构，而不是内容</p></li><li><p><strong>概念笔记</strong>——掌握的作者对这个主题所要表达的想法，跟读物中的概念相关</p></li><li><p><strong>辩证笔记</strong>——针对一场讨论情景的笔记，从多本书中摘要出来的</p></li></ol><h5 id="五、培养阅读的习惯"><a href="#五、培养阅读的习惯" class="headerlink" title="五、培养阅读的习惯"></a>五、培养阅读的习惯</h5><ol><li><strong>从实践中懂得如何去做</strong>——不断的运作练习。</li><li><strong>由许多规则中养成一个习惯</strong><ul><li><strong>为了要忘掉这些单一的动作，一开始你必须先分别学会每一个单一的动作</strong></li><li><strong>在达到一定的熟练程度后，每个分开的动作自然会压缩、连接起来成为一个完整的动作</strong></li></ul></li></ol><p><strong><em>每天进步一点点！！！</em></strong></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>阅读技巧</category>
        <category>基础阅读</category>
      </categories>
      <tags>
        <tag>阅读</tag>
      </tags>
  </entry>
  <entry>
    <title>怎样阅读一本书（2）</title>
    <url>/be498247.html</url>
    <content><![CDATA[<!-- build time:Thu May 21 2020 12:07:14 GMT+0800 (GMT+08:00) --><h4 id="第三章-基础阅读"><a href="#第三章-基础阅读" class="headerlink" title="第三章    基础阅读"></a>第三章 基础阅读</h4><h5 id="一、基础阅读的四个阶段"><a href="#一、基础阅读的四个阶段" class="headerlink" title="一、基础阅读的四个阶段"></a>一、基础阅读的四个阶段</h5><ul><li>阶段一 阅读准备阶段<ul><li>身体方面的准备：听力、视力、智力</li><li>语言准备：听、写、说</li><li>个人准备：协同学习能力、注意力集中、具备服从性</li></ul></li><li>阶段二 阅读简单的读物——例如看图识字</li><li>阶段三 快速建立字汇的能力<ul><li>从上下文的线索，“揭发”不熟悉的字眼。</li></ul></li><li>阶段四 精炼与增强前面所学的技巧</li></ul><h4 id="第四章-检视阅读"><a href="#第四章-检视阅读" class="headerlink" title="第四章    检视阅读"></a>第四章 检视阅读</h4><h5 id="一、系统的略读或粗读"><a href="#一、系统的略读或粗读" class="headerlink" title="一、系统的略读或粗读"></a>一、系统的略读或粗读</h5><ul><li>目标：发现一本书是否值得多花时间仔细阅读</li><li>步骤：<ul><li><strong>先看书名页</strong>，<strong>然后以序就先看序</strong>——对读物的主题有一个基本的概念了。</li><li><strong>研究目录页</strong>——对读物的基本架构做概括性的理解。</li><li><strong>如果书中有索引</strong>，<strong>先检阅一下索引</strong>——评估读物涵盖议题的范围以及提及的书籍种类；辨认出一些重要词目。</li><li>如果那是本包着书衣的新书，<strong>读一下出版者的介绍</strong>——作者会精心准备这些文案，根据文案判断书籍是否值得阅读。</li><li>从你对一本书的目录很概略，甚至有些模糊的印象当中，<strong>开始挑几个看来跟主题息息相关的篇章来看。</strong></li><li><strong>最后一步，把书打开来，东翻翻西翻翻，念个一两段，有时候连续读几页，但不要太多</strong></li></ul></li></ul><h5 id="二、粗线的阅读"><a href="#二、粗线的阅读" class="headerlink" title="二、粗线的阅读"></a>二、粗线的阅读</h5><ul><li><p>如何阅读一本难读的书——<strong>头一次阅读一本难读的书的时候，从头到尾先读一遍，碰到不懂的地方不要停下来查询或者思索</strong></p></li><li><p>如果你让自己在一碰上困难的地方就停住，最后可能对这本书真的一无所知。</p></li><li><p><strong>阅读速度</strong></p><ul><li>所谓阅读速度，理想上来说，不只是要读得快，还要能用不同的速度来阅读——要知道什么时候用什么样的速度是恰当的。</li><li>每一本书，不论是多么难读的书，在无关紧要的间隙部分就可以读得快一点。而一本好的书，总会包含一些比较困难的，应该慢慢阅读的内容。</li></ul></li><li><p>逗留与倒退</p><ul><li><strong>不让眼睛限制你的思维速度，要让大脑的思维速度控制你的眼睛的移动速度</strong>。</li></ul></li><li><p><strong>在阅读一本书的时候，慢不该慢到不值得，快不该快到有损于满足和理解。</strong></p></li></ul><p><strong><em>每天进步一点点！！！</em></strong></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>阅读技巧</category>
        <category>基础阅读</category>
      </categories>
      <tags>
        <tag>阅读</tag>
      </tags>
  </entry>
  <entry>
    <title>初识Java</title>
    <url>/3bb54abf.html</url>
    <content><![CDATA[<!-- build time:Thu May 21 2020 12:07:14 GMT+0800 (GMT+08:00) --><h3 id="初识java的类"><a href="#初识java的类" class="headerlink" title="初识java的类"></a>初识java的类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	类的定义格式：</span></span><br><span class="line"><span class="comment">		public class 类名 &#123;</span></span><br><span class="line"><span class="comment">		</span></span><br><span class="line"><span class="comment">		&#125;</span></span><br><span class="line"><span class="comment">	这是我定义的HelloWorld类</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWrld</span> </span>&#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	这是main方法</span></span><br><span class="line"><span class="comment">	main方法是程序的入口，代码的执行是从main方法开始的</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//这是输出语句，""里面的内容是可以改变的</span></span><br><span class="line">		System.out.println(<span class="string">"HelloWorld"</span>);</span><br><span class="line">	&#125;	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="java中的注释"><a href="#java中的注释" class="headerlink" title="java中的注释"></a>java中的注释</h3><ul><li><p>单行注释</p><ul><li><p>语法//+注释内容</p></li><li><p>示例：</p></li><li><pre><code class="java"><span class="comment">//这是一个单行注释的内容</span>
&lt;!--￼<span class="number">1</span>--&gt;</code></pre></li></ul></li><li><p>文档注释</p><ul><li>语法：/** + 注释内容 + */</li><li>未完待续</li></ul></li></ul><h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><ul><li><p>被Java语言赋予了特定含义的单词</p></li><li><p>关键字的特点：</p><ul><li>关键字的字母全部小写</li><li>常用的代码编辑器，针对关键字有特殊的颜色标记</li></ul></li></ul><p><img data-src="https://forpicgokkj.oss-cn-shenzhen.aliyuncs.com/img/20200521115004.png" alt=""></p><ul><li><p>如图，红线框之中的特殊颜色标记的就是关键字</p></li><li><p>java的50余个关键字解析</p></li><li><pre><code class="java"><span class="keyword">abstract</span> 
<span class="comment">/*</span>
<span class="comment">抽象的</span>
<span class="comment">一个Java语言中的关键字，用在类的声明中来指明一个类是不能被实例化的，但是可以被其它类继承。一个抽象类可以使用抽象方法，抽象方法不需要实现，但是需要在子类中被实现</span>
<span class="comment">*/</span>
<span class="keyword">break</span>
<span class="comment">/*</span>
<span class="comment">一个Java的关键字，用来改变程序执行流程，立刻从当前语句的下一句开始执行从。如果后面跟有一个标签，则从标签对应的地方开始执行</span>
<span class="comment">*/</span>
<span class="keyword">case</span>
<span class="comment">/*</span>
<span class="comment">Java语言的关键字，用来定义一组分支选择，如果某个值和switch中给出的值一样，就会从该分支开始执行。</span>
<span class="comment">*/</span>
<span class="keyword">catch</span>
<span class="comment">/*</span>
<span class="comment">Java的一个关键字，用来声明当try语句块中发生运行时错误或非运行时异常时运行的一个块。</span>
<span class="comment">*/</span>
<span class="keyword">char</span>
<span class="comment">/*</span>
<span class="comment">Java语言的一个关键字，用来定义一个字符类型</span>
<span class="comment">*/</span>
<span class="keyword">continue</span>
<span class="comment">/*</span>
<span class="comment">一个Java的关键字，用来打断当前循环过程，从当前循环的最后重新开始执行，如果后面跟有一个标签，则从标签对应的地方开始执行。</span>
<span class="comment">*/</span>
<span class="keyword">do</span>
<span class="comment">/*</span>
<span class="comment">一个Java语言的关键字，用来声明一个循环，这个循环的结束条件可以通过while关键字设置</span>
<span class="comment">*/</span>
<span class="keyword">double</span>
<span class="comment">/*</span>
<span class="comment">一个Java语言的关键字，用来定义一个double类型的变量</span>
<span class="comment">*/</span>
<span class="keyword">else</span>
<span class="comment">/*</span>
<span class="comment">一个Java语言的关键字，如果if语句的条件不满足就会执行该语句。</span>
<span class="comment">*/</span>
<span class="keyword">final</span>
<span class="comment">/*</span>
<span class="comment">一个Java语言的关键字。你只能定义一个实体一次，以后不能改变它或继承它。更严格的讲：一个final修饰的类不能被子类化，一个final修饰的方法不能被重写，一个final修饰的变量不能改变其初始值。</span>
<span class="comment">*/</span>
<span class="keyword">finally</span>
<span class="comment">/*</span>
<span class="comment">一个Java语言的关键字，用来执行一段代码不管在前面定义的try语句中是否有异常或运行时错误发生。</span>
<span class="comment">*/</span>
<span class="keyword">float</span>
<span class="comment">/*</span>
<span class="comment">一个Java语言的关键字，用来定义一个浮点数变量</span>
<span class="comment">*/</span>
<span class="keyword">for</span>
<span class="comment">/*</span>
<span class="comment">一个Java语言的关键字，用来声明一个循环。程序员可以指定要循环的语句，推出条件和初始化变量。</span>
<span class="comment">*/</span>
<span class="keyword">if</span>
<span class="comment">/*</span>
<span class="comment">Java编程语言的一个关键字，用来生成一个条件测试，如果条件为真，就执行if下的语句。</span>
<span class="comment">*/</span>
implements
<span class="comment">//Java(TM)编程语言的一个关键字，在类的声明中是可选的，用来指明当前类实现的接口。</span>

<span class="keyword">import</span>
<span class="comment">//Java(TM)编程语言的一个关键字，在源文件的开始部分指明后面将要引用的一个类或整个包，这样就不必在使用的时候加上包的名字。</span>

<span class="keyword">instanceof</span>
<span class="comment">//一个二操作数的Java(TM)语言关键字，用来测试第一个参数的运行时类型是否和第二个参数兼容。</span>

<span class="keyword">int</span>
<span class="comment">//Java(TM)的一个关键字，用来定义一个整形变量</span>

<span class="class"><span class="keyword">interface</span></span>
<span class="class">//<span class="title">Java</span>(<span class="title">TM</span>)的一个关键字，用来定义一系列的方法和常量。它可以被类实现，通过<span class="keyword">implements</span>关键字。</span>
<span class="class"></span>
<span class="class"><span class="title">long</span></span>
<span class="class">//<span class="title">Java</span>语言的一个关键字，用来定义一个<span class="title">long</span>类型的变量。</span>
<span class="class"></span>
<span class="class"><span class="title">private</span></span>
<span class="class">//<span class="title">Java</span>语言的一个关键字，用在方法或变量的声中。它表示这个方法或变量只能被这个类的其它元素所访问。</span>
<span class="class"></span>
<span class="class"><span class="title">protected</span></span>
<span class="class">//<span class="title">Java</span>语言的一个关键字，在方法和变量的声明中使用，它表示这个方法或变量只能被同一个类中的，子类中的或者同一个包中的类中的元素所访问。</span>
<span class="class"></span>
<span class="class"><span class="title">public</span></span>
<span class="class">//<span class="title">Java</span>语言的一个关键字，在方法和变量的声明中使用，它表示这个方法或变量能够被其它类中的元素访问。</span>
<span class="class"></span>
<span class="class"><span class="title">return</span></span>
<span class="class">//<span class="title">Java</span>语言的一个关键字，用来结束一个方法的执行。它后面可以跟一个方法声明中要求的值。</span>
<span class="class"></span>
<span class="class"><span class="title">short</span></span>
<span class="class">//<span class="title">Java</span>语言的关键字，用来定义一个<span class="title">short</span>类型的变量。</span>
<span class="class"></span>
<span class="class"><span class="title">static</span></span>
//Java语言的关键字，用来定义一个变量为类变量。类只维护一个类变量的拷贝，不管该类当前有多少个实例。"static" 同样能够用来定义一个方法为类方法。类方法通过类名调用而不是特定的实例，并且只能操作类变量。

<span class="keyword">this</span>
<span class="comment">//Java语言的关键字，用来代表它出现的类的一个实例。this可以用来访问类变量和类方法。</span>

<span class="keyword">throw</span>
<span class="comment">//Java语言的关键字，允许用户抛出一个exception对象或者任何实现throwable的对象</span>

<span class="keyword">throws</span>
<span class="comment">//Java语言的关键字，用在方法的声明中来说明哪些异常这个方法是不处理的，而是提交到程序的更高一层。</span>

<span class="keyword">transient</span>
<span class="comment">//Java语言的关键字，用来表示一个域不是该对象串行化的一部分。当一个对象被串行化的时候，transient型变量的值不包括在串行化的表示中，然而非transient型的变量是被包括进去的。</span>

<span class="keyword">try</span>
<span class="comment">//Java语言的关键字，用来定义一个可能抛出异常语句块。如果一个异常被抛出，一个可选的catch语句块会处理try语句块中抛出的异常。同时，一个finally语句块会被执行，无论一个异常是否被抛出。</span>

<span class="keyword">void</span>
<span class="comment">//Java语言的关键字，用在Java语言的方法声明中说明这个方法没有任何返回值。"void"也可以用来表示一句没有任何功能的语句。</span>

<span class="keyword">volatile</span>
<span class="comment">//Java语言的关键字，用在变量的声明中表示这个变量是被同时运行的几个线程异步修改的。</span>

<span class="keyword">while</span>
<span class="comment">//Java语言的一个关键字，用来定义一段反复执行的循环语句。循环的退出条件是while语句的一部分。</span>

<span class="comment">/*关于break和continue。</span>
<span class="comment">continue 语句与break语句相关，但较少用到。continue语句用于使其所在的for、while或do-while语句开始下一次循环。在while与 do-while语句中，continue语句的执行意味着立即执行测试部分;在for循环语句中，continue语句的执行则意味着使控制传递到增量部分。*/</span></code></pre></li><li></li></ul><!-- rebuild by neat -->]]></content>
      <categories>
        <category>Java技术笔记</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>如何阅读一本书（1）</title>
    <url>/eb7fdb56.html</url>
    <content><![CDATA[<!-- build time:Thu May 21 2020 12:07:14 GMT+0800 (GMT+08:00) --><h3 id="第一篇-阅读的层次"><a href="#第一篇-阅读的层次" class="headerlink" title="第一篇  阅读的层次"></a>第一篇 阅读的层次</h3><h5 id="第一章-阅读的活力与艺术"><a href="#第一章-阅读的活力与艺术" class="headerlink" title="第一章  阅读的活力与艺术"></a>第一章 阅读的活力与艺术</h5><ul><li>重点一 主动的阅读：<strong>阅读越主动，效果越好</strong></li><li>重点二 投手与捕手理论：读书的过程就像是棒球比赛中投球手与外野手一样，需要坐着与读者之间密切的配合才能更好的在书籍中进行沟通；成功的沟通都发生于作者想要传递给读者的信息，刚好被读者掌握住了。</li><li>重点三 阅读的目标<ul><li>为获得咨询而读</li><li>为求得理解而读</li></ul></li><li>重点四 阅读的艺术<strong>定义</strong>：这是一个凭借着头脑运作，除了玩味读物中的一些字句外，不假借任何外助，以一己之力来提升自我的过程。</li><li>重点五 阅读就是学习<ul><li>指导型学习<ul><li>吸收咨询是要被启发的前提动作</li></ul></li><li>自我发现型的学习<ul><li>主动思考、主动理解、阅读与自身理解力不对等的高杆作品</li></ul></li></ul></li><li>重点六 懂得用书（缺席的老师）来教导我们。</li></ul><h5 id="第二章-阅读的层次"><a href="#第二章-阅读的层次" class="headerlink" title="第二章  阅读的层次"></a>第二章 阅读的层次</h5><ul><li>重点一 四个层次<ul><li>基础阅读</li><li>检视阅读</li><li>分析阅读</li><li>主题阅读</li></ul></li><li>重点二 基础阅读<ul><li>基础阅读需要克服的困难时语言困难</li></ul></li><li>重点三 检视阅读<ul><li>检视阅读是<strong>系统化略读</strong>的一门艺术</li><li>检视阅读主要需要弄明白<strong>这本书在讲什么</strong>；<strong>这是哪一类书</strong>；<strong>这本书的结构是什么</strong></li></ul></li><li>重点四 分析阅读<ul><li>一直要读到这本书成为自己为止</li><li>只有少数的书是需要咀嚼与消化的</li><li>擅长于寻求理解</li></ul></li><li>重点五 主题阅读<ul><li>最有收获的一种阅读活动</li></ul></li></ul><!-- rebuild by neat -->]]></content>
      <categories>
        <category>阅读技巧</category>
        <category>基础阅读</category>
      </categories>
      <tags>
        <tag>阅读</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux是什么</title>
    <url>/e3a70ff1.html</url>
    <content><![CDATA[<!-- build time:Thu May 21 2020 12:07:14 GMT+0800 (GMT+08:00) --><p><img data-src="https://forpicgokkj.oss-cn-shenzhen.aliyuncs.com/img/20200504012826.png" alt=""></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>Linux系统</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>初识Markdown</title>
    <url>/88af5d4e.html</url>
    <content><![CDATA[<!-- build time:Thu May 21 2020 12:07:14 GMT+0800 (GMT+08:00) --><h1 id="Markdown语法概要"><a href="#Markdown语法概要" class="headerlink" title="Markdown语法概要"></a>Markdown语法概要</h1><hr><h2 id="1-结构类操作"><a href="#1-结构类操作" class="headerlink" title="1.结构类操作"></a>1.结构类操作</h2><h3 id="（1）多级标题"><a href="#（1）多级标题" class="headerlink" title="（1）多级标题"></a>（1）多级标题</h3><ul><li><p>“#”或者标题下方加”===” 一级标题</p></li><li><p>“##”或者标题下方加”—“ 二级标题</p></li><li><p>“###” 三级标题</p></li><li><p>“####” 四级标题</p></li><li><p>“#####” 五级标题</p></li><li><p>“######” 六级标题</p></li></ul><h3 id="（2）字体形式"><a href="#（2）字体形式" class="headerlink" title="（2）字体形式"></a>（2）字体形式</h3><ul><li>斜体： “ * “+内容+” * “ 例如：<em>这是斜体</em></li><li>粗体：” ** “+内容+” ** “ 例如：<strong>这是粗体</strong></li><li>粗斜体：” * * * “+内容+ “ * * * “ 例如：<strong><em>这是粗斜体</em></strong></li></ul><h3 id="（3）有序列表"><a href="#（3）有序列表" class="headerlink" title="（3）有序列表"></a>（3）有序列表</h3><ol><li>父列表(序号+空格)<ol><li>子列表（tab降级、shift+tab升级）</li><li>子列表</li></ol></li><li>父列表二<ol><li>子列表二</li><li>子列表二</li></ol></li><li>父列表三<ol><li>子列表三</li><li>子列表三</li></ol></li></ol><h3 id="（4）无序列表"><a href="#（4）无序列表" class="headerlink" title="（4）无序列表"></a>（4）无序列表</h3><ul><li>父列表（*+空格 or - +空格）</li><li>父列表二<ol><li>有序子列表（嵌套有序列表）</li><li>有序子列表</li></ol></li><li>父列表三<ul><li>无序子列表</li><li>无序子列表</li></ul></li></ul><h3 id="（5）任务列表"><a href="#（5）任务列表" class="headerlink" title="（5）任务列表"></a>（5）任务列表</h3><ol><li>语法： * [ ] 选项</li><li>示例</li></ol><ul><li><input disabled type="checkbox"> 选项1</li><li><input disabled type="checkbox"> 选项2</li><li><input disabled type="checkbox"> 选项3</li><li><input disabled type="checkbox"> 选项4</li></ul><h3 id="（6）表格"><a href="#（6）表格" class="headerlink" title="（6）表格"></a>（6）表格</h3><table><thead><tr><th>表头1</th><th>表头2</th><th>表头3</th><th>表头4</th></tr></thead><tbody><tr><td>内容1</td><td>内容2</td><td>内容3</td><td>内容4</td></tr><tr><td>内容5</td><td>内容6</td><td>内容7</td><td>内容8</td></tr></tbody></table><hr><h2 id="2-代码类操作"><a href="#2-代码类操作" class="headerlink" title="2.代码类操作"></a>2.代码类操作</h2><h3 id="1-行内代码"><a href="#1-行内代码" class="headerlink" title="(1)行内代码"></a>(1)行内代码</h3><ul><li>语法 反引号+<code>code</code>+反引号</li><li>示例：<code>Java</code>是一门面向对象的编程语言，不仅吸收了<code>C++</code>语言法人各种优点，还摒弃了<code>C++</code>里难以理解法人多继承、指针等概念、因此<code>Java</code>语言具有强大和简单易用的两个特征。</li></ul><h3 id="2-代码块"><a href="#2-代码块" class="headerlink" title="(2)代码块"></a>(2)代码块</h3><ul><li>语法：三个反引号+语言类别+代码 or 三个波浪号+语言类别+代码</li><li>示例</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyLove</span></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"I Love LiangLi"</span>)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyLove</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"I Love LiangLi"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="3-元素类的操作"><a href="#3-元素类的操作" class="headerlink" title="3.元素类的操作"></a>3.元素类的操作</h2><h3 id="1-插入图片"><a href="#1-插入图片" class="headerlink" title="(1) 插入图片"></a>(1) 插入图片</h3><ul><li>语法：! [] ()——&gt;选择图片</li><li>示例：</li></ul><p><img data-src="https://forpicgokkj.oss-cn-shenzhen.aliyuncs.com/img/20200504012935.jpg" alt=""></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>工具应用</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>怎样阅读一本书（5）</title>
    <url>/239ebafe.html</url>
    <content><![CDATA[<!-- build time:Thu May 21 2020 12:07:14 GMT+0800 (GMT+08:00) --><h3 id="第八章-与作者找出共通的词义"><a href="#第八章-与作者找出共通的词义" class="headerlink" title="第八章    与作者找出共通的词义"></a>第八章 与作者找出共通的词义</h3><ul><li><strong>找出共通的词义</strong>——简单来说，就是找出共通的词义来达成共识</li><li><strong>词义是可供沟通的知识的基本要素</strong>，那么，什么是一个词义？<strong>当一个单字使用得没有模糊意义的时候，那就是一个词义了</strong></li></ul><h4 id="规则五-找出重要的单字，透过它们与作者达成共识"><a href="#规则五-找出重要的单字，透过它们与作者达成共识" class="headerlink" title="规则五    找出重要的单字，透过它们与作者达成共识"></a>规则五 找出重要的单字，透过它们与作者达成共识</h4><ul><li>目标：诠释内容与讯息<ul><li>步骤一 解决语言问题</li><li>步骤二 处理语言背后的思想含义</li></ul></li><li>注意点：一个单字可能代表许多不同的词义，一个词义也可以用许多不同的单字来解释。</li></ul><h5 id="1-找出关键字"><a href="#1-找出关键字" class="headerlink" title="1.找出关键字"></a>1.找出关键字</h5><ul><li>从一个读者的角度来讲，最重要的字就是<strong>那些让你头痛的字</strong>。</li><li>专门用语和特殊词汇——<strong>每一个知识领域都有独特的专门用语。</strong><ul><li>积极面：只要熟悉一下那个领域，就能找出这些专门用语。</li><li>消极面：只要看到不是平常惯见的单字，就可以判断哪些是专门用语。</li></ul></li></ul><h5 id="2-找出字义"><a href="#2-找出字义" class="headerlink" title="2.找出字义"></a>2.找出字义</h5><ul><li>首先将又问题的字圈出来<ul><li>可能性一：作者在全书每个地方用到这个字眼的时候都是同一个意义；</li><li>可能性二：同一个字他会使用两三种意义，在书中各处不断变换字义。</li></ul></li><li>操作办法<ul><li>第一，判断一个字是有一个还是有多重意义</li><li>第二，如果有多重意义，要看这些意义之间的关系是如何。</li><li>第三，注意这些字在某个地方出现时，使用的其中哪个意义。</li></ul></li><li><strong>奥义：一定要利用上下文自己已经了解的所有字句，来推敲出你所不了解的那个字的意义</strong></li><li>事实上，一本书之所以能带给你新的洞察力或启发，正是因为其中有一些你不能一读即懂的字句。</li><li>区分作者的用语与专业术语，注意出现的短语的意思。</li></ul><h4 id="第八章小结"><a href="#第八章小结" class="headerlink" title="第八章小结"></a>第八章小结</h4><ul><li>找出重要的关键字</li><li>确认每个字不同意义的转换</li><li>找出与作者共通的词义</li></ul><h3 id="第九章-判断作者的主旨"><a href="#第九章-判断作者的主旨" class="headerlink" title="第九章    判断作者的主旨"></a>第九章 判断作者的主旨</h3><p><strong>书的世界和生意的世界是一样的，不但要懂得达成共识，还要懂得提案。书里的提案就是主旨。</strong></p><ul><li><strong>作者的主旨如果没有理论的支持，就只是在抒发个人罢了</strong></li><li><strong>其次，我们应该还知道为什么作者认为我们应该被说服，以接收他的观点</strong></li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="string">"再次强调，分析阅读的第二个阶段的目的在于诠释作者的意图，而非第一阶段的目的（掌握结构大纲）"</span></span><br></pre></td></tr></table></figure><h4 id="句子与主旨"><a href="#句子与主旨" class="headerlink" title="句子与主旨"></a>句子与主旨</h4><ul><li>语言与思想：<ul><li>句子与段落是文法、语言的单位</li><li>主旨与论述是逻辑、思想与知识的单位</li></ul></li><li>重点：字与意思之间的关系不是唯一对应的。</li><li><strong>主旨往往透漏在作者的自问自答之中（其中，陈述句答案就很可能是主旨）</strong></li><li>并不是每一个陈述句都可以当做是在表达一个主旨<ul><li>理由1：事实上，字都是有歧义的，可以用在很多的语境当中。</li><li>理由2：句子并不会都是“1+1=2”这么简单（<strong>需要深层次去分析</strong>）</li></ul></li></ul><h4 id="规则六-将一本书中最重要的句子圈出来，找出其中的主旨"><a href="#规则六-将一本书中最重要的句子圈出来，找出其中的主旨" class="headerlink" title="规则六    将一本书中最重要的句子圈出来，找出其中的主旨"></a>规则六 将一本书中最重要的句子圈出来，找出其中的主旨</h4><h5 id="1-找出关键句"><a href="#1-找出关键句" class="headerlink" title="1.找出关键句"></a>1.找出关键句</h5><ul><li><p>站在作者的角度上考虑，最重要的句子就是在整个论述中，阐述作者判断的部分</p></li><li><p><strong>作何沟通的主要核心是其所下的肯定与否定的判断，以及为什么会这样下判断的理由</strong></p></li><li><pre><code class="java"><span class="string">'阅读的一部分本质就是被困惑，而且要知道自己被困惑'</span></code></pre></li><li><p>找出组成关键句的关键字来（承上一节找出关键字）</p></li><li><p>接下来就是更进一步找出最主要的主旨的线索。</p></li></ul><h5 id="2-找出主旨"><a href="#2-找出主旨" class="headerlink" title="2.找出主旨"></a>2.找出主旨</h5><ul><li>找出词义与主旨的异同<ul><li>后者所牵涉的内容比较多</li><li>复杂的句子通常要说明的不只一个主旨</li></ul></li><li>校验理解主旨与否的方法<ul><li>“用自己的话来表述作者所要阐述的意思”</li><li>用其他外语来翻译一次（例如英语）</li><li>就相关主旨列举例子（虚拟的，真实的，生活的，实验的实际或可能的事实）</li></ul></li></ul><h4 id="规则七-从相关文句的关联中，设法架构出一本书的基本论述"><a href="#规则七-从相关文句的关联中，设法架构出一本书的基本论述" class="headerlink" title="规则七    从相关文句的关联中，设法架构出一本书的基本论述"></a>规则七 从相关文句的关联中，设法架构出一本书的基本论述</h4><h5 id="1-找出论述"><a href="#1-找出论述" class="headerlink" title="1.找出论述"></a>1.找出论述</h5><ul><li>处理的对象：一堆句子的组合（不一定是具体的一个段落）</li><li>困难点：<strong>在任何一本书中都有许多段落根本没有任何论述</strong></li><li>方法：<strong>如果可以，找出书中说明重要论述的段落。但是，如果这个论述并没有这样表达出来，你就要去架构出来。你要从这一段或那一段中挑选句子出来，然后整理出前后顺序的主旨，以及其组成的论述。</strong><ul><li>首先，要记住所有的论述都包含了一些声明。</li><li>其次，要区别归纳法和演绎法的不同之处。<ul><li>归纳：以一个或多个特殊的事实来证明某种共通的概念</li><li>演绎：以连串的通则来证明更进一步的共通概念</li></ul></li><li>第三，找出作者认为那些事情是假设，哪些是能被证实的或者有根据的，以及哪些是不需要证实的自明之理。<ul><li>一种是作者与读者都同意的假设</li><li>一种是不论读者还是作者都无法否认的自明之理</li></ul></li></ul></li></ul><h4 id="规则八-找出作者的解答"><a href="#规则八-找出作者的解答" class="headerlink" title="规则八    找出作者的解答"></a>规则八 找出作者的解答</h4><p><strong>找出作者在书中想要解决的主要问题</strong></p><p><strong>明白哪些问题已经解决，哪些问题尚待解决</strong></p><p><strong>还要解决一些为了解决已有问题而提出的新问题</strong></p><h3 id="第二阶段总结"><a href="#第二阶段总结" class="headerlink" title="第二阶段总结"></a>第二阶段总结</h3><p><strong><em>这本书的详细内容是什么？如何叙述的？</em></strong></p><ul><li><strong>分析阅读的第二个阶段,或找出一本书到底在说什么的规则(诠释一本书的内容):</strong></li></ul><ol><li><strong>释作者使用的关键字,与作者达成共识。</strong></li><li><strong>从最重要的句子中抓出作者的重要主旨。</strong></li><li><strong>找出作者的论述,重新架构这些论述的前因后果，以明白作</strong><br><strong>的主张。</strong></li><li><strong>确定作者已经解决了哪些问题,还有哪些是未解决的。在未</strong><br><strong>决的问题中,确定哪些是作者认为自己无法解决的问题。</strong></li></ol><p><strong><em>每天进步一点点！！！</em></strong></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>阅读技巧</category>
        <category>分析阅读</category>
      </categories>
      <tags>
        <tag>阅读</tag>
      </tags>
  </entry>
  <entry>
    <title>初识git</title>
    <url>/f6f499b8.html</url>
    <content><![CDATA[<!-- build time:Thu May 21 2020 12:07:14 GMT+0800 (GMT+08:00) --><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><ul><li>网址:<span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbS9kb3dubG9hZC93aW4=">git下载<i class="fa fa-external-link-alt"></i></span></li><li>安装：更改路径后，一路“next”</li></ul><h2 id="配置git"><a href="#配置git" class="headerlink" title="配置git"></a>配置git</h2><ul><li>配置用户命令：<code>git config --global user.name &quot;yonghuming&quot;</code></li><li>配置用户邮箱：<code>git config --global user.email &quot;eamiladress&quot;</code></li></ul><h2 id="创建版本库"><a href="#创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h2><ul><li>第一步：创建空文件夹 <code>mkdir projects</code></li><li>第二步：纳入git管理 1. <code>&quot;cd projcts/&quot;</code> 2.<code>&quot;git init&quot;</code></li><li>第三步：创建新文件”readme.md”代码：<code>touch readme.md</code></li><li>第四步：编辑文件</li><li>第五步：添加文件到缓存区，命令:<code>git add readme.md</code></li><li>第六步：提交文件到版本库：<code>git commit -m &quot;新建并提交readme.md&quot;</code></li><li>辅助命令“查看当前状态”：<code>git status</code></li></ul><h2 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h2><ul><li>查询版本号：<code>git log</code><br>或者：<code>git log --pretty=oneline</code>（推荐使用）</li><li>回退指令：<code>git reset --hard 版本号</code></li><li>回退到之前任意一个版本<ol><li>查询版本号：<code>git reflog</code></li><li>回退指令：<code>git reset --hard 版本号</code><h2><a href="#" class="headerlink"></a></h2></li></ol></li></ul><!-- rebuild by neat -->]]></content>
      <categories>
        <category>工具应用</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>终于等到你，还好我没放弃</title>
    <url>/cdb4cb7b.html</url>
    <content><![CDATA[<!-- build time:Thu May 21 2020 12:07:14 GMT+0800 (GMT+08:00) --><h1 id="终于等到你，还好我没放弃"><a href="#终于等到你，还好我没放弃" class="headerlink" title="终于等到你，还好我没放弃"></a>终于等到你，还好我没放弃</h1><h2 id="一、关于她"><a href="#一、关于她" class="headerlink" title="一、关于她"></a>一、关于她</h2><h3 id="1-爱好"><a href="#1-爱好" class="headerlink" title="1.爱好"></a>1.爱好</h3><ul><li>韩剧</li><li>阅读</li><li>散步</li><li>瑜伽</li><li>火锅</li><li>旅游</li><li>极光</li></ul><h3 id="2-年龄"><a href="#2-年龄" class="headerlink" title="2.年龄"></a>2.年龄</h3><p>23岁</p><h3 id="3-毕业院校"><a href="#3-毕业院校" class="headerlink" title="3.毕业院校"></a>3.毕业院校</h3><p>成都职业技术学院</p><h3 id="4-专业"><a href="#4-专业" class="headerlink" title="4.专业"></a>4.专业</h3><p>物流管理</p><h3 id="5-身高"><a href="#5-身高" class="headerlink" title="5.身高"></a>5.身高</h3><p>158cm</p><h3 id="6-三维"><a href="#6-三维" class="headerlink" title="6.三维"></a>6.三维</h3><p>胸围：</p><p>腰围：</p><p>臀围：</p><h3 id="7-饭量"><a href="#7-饭量" class="headerlink" title="7.饭量"></a>7.饭量</h3><p>2碗</p><h3 id="8-足长"><a href="#8-足长" class="headerlink" title="8.足长"></a>8.足长</h3><p>36码</p><h3 id="9-颜色"><a href="#9-颜色" class="headerlink" title="9.颜色"></a>9.颜色</h3><p>蓝绿色</p><h2 id="二、关于我们"><a href="#二、关于我们" class="headerlink" title="二、关于我们"></a>二、关于我们</h2><p><img data-src="https://forpicgokkj.oss-cn-shenzhen.aliyuncs.com/img/20200504012933.jpg" alt=""><br><img data-src="https://forpicgokkj.oss-cn-shenzhen.aliyuncs.com/img/20200504012932.jpg" alt=""><br><img data-src="https://forpicgokkj.oss-cn-shenzhen.aliyuncs.com/img/20200504012934.jpg" alt=""><br><img data-src="https://forpicgokkj.oss-cn-shenzhen.aliyuncs.com/img/20200504013216.jpg" alt=""><br><img data-src="https://forpicgokkj.oss-cn-shenzhen.aliyuncs.com/img/20200504013157.jpg" alt=""><br><img data-src="https://forpicgokkj.oss-cn-shenzhen.aliyuncs.com/img/20200504012936.jpg" alt=""><br><img data-src="https://forpicgokkj.oss-cn-shenzhen.aliyuncs.com/img/20200504012935.jpg" alt=""></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>我的生活</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>怎样阅读一本书（4）</title>
    <url>/9b22dd9b.html</url>
    <content><![CDATA[<!-- build time:Thu May 21 2020 12:07:14 GMT+0800 (GMT+08:00) --><h3 id="第二篇-分析阅读"><a href="#第二篇-分析阅读" class="headerlink" title="第二篇    分析阅读"></a>第二篇 分析阅读</h3><h5 id="第六章-一本书的分类"><a href="#第六章-一本书的分类" class="headerlink" title="第六章    一本书的分类"></a>第六章 一本书的分类</h5><ul><li><p>书籍分类的重要性</p><ul><li><strong>规则一：一定要知道自己在读的是哪一类书，而且知道的越早越好。最好早在开始阅读之前就知道。</strong></li><li>利用前面提到的检视阅读的技巧进行提前了解书籍的类型</li></ul></li><li><p>从一本书能学到什么</p><ul><li>建立自己心中的书籍分类标准</li><li>只有当自己心中有一个分类标准时，才能做明智的判断</li></ul></li><li><p>实用性vs理论性作品</p><ul><li>重点一：<strong>超越“知道这是怎么回事”，明白“如果我们想做些什么，应该怎么利用它“</strong></li><li>重点二：理论性的作品是在教这是什么，实用性作品是在教如何去做自己想做的事，或是自己认为应该做的事。</li></ul></li><li><p>理论性作品的分类</p><ul><li>传统分类法：历史，科学，哲学等等</li><li>历史就是纪事</li><li>哲学还是科学？<ul><li>如果一本理论的书所强调的内容，超乎你日常，例行，正常生活的经验，那就是科学的书。否则就是一本哲学的书。</li><li>证明方法不同：科学家会从他特殊经验的结果做举证，哲学家却会以人类的共通性做例证。</li></ul></li></ul></li></ul><h5 id="第七章-透视一本书"><a href="#第七章-透视一本书" class="headerlink" title="第七章    透视一本书"></a>第七章 透视一本书</h5><ul><li><strong>找出书本的骨架</strong></li><li><strong>规则二 ：使用一个单一的句子，或最多几句话（一小段文字）来叙述整本书的内容</strong><ul><li>结构与规划：叙述整本书的大意</li><li>最后找出一个架构是读者的责任</li><li>两个提醒<ul><li>首先，一位作者，特别是好的作者，会经常想要帮助你整理出他书中的重点。</li><li>其次，要小心留意，不要把作者提供的重点摘要，当做是它们绝对又唯一的说明。</li></ul></li></ul></li><li><strong>规则三：将书中的重要篇章列举出来，说明它们如何按照顺序组成一个整体的架构。</strong><ul><li>驾驭复杂的内容：为一本书拟大纲的技巧<ul><li>提示：规则二是知道读者注意一本书的整体性，规则三则是在强调一本书的复杂度</li><li>注意：读者所拟的大纲是关于作品本身的纲要，而不是这本书要谈的主题的纲要。</li></ul></li></ul></li><li><strong>阅读与写作的互惠技巧</strong><ul><li>阅读与写作是一体两面的事</li><li>尽管如此，读者与作者对规则的运用方向是不同的——读者以发现书的框架为起点，作者以制造框架为起点。</li><li>强调：规则二、三不但可以用来阅读一本论说性的书，也可以用来阅读其中某个特别重要的部分。</li></ul></li><li><strong>发现作者的意图</strong><ul><li><strong>规则四：找出作者要问的问题</strong></li><li><strong>理论性问题：</strong><ul><li>某件事存在吗?是什么样的事?</li><li>发生的原因是什么？</li><li>或是在什么样的情况下存在?</li><li>或为什么会有这件事的存在?</li><li>这件事的目的是什么?</li><li>造成的影响是什么？特性及特征是什么?</li><li>与其他类似事件,或不相同事件的关联是什么?</li><li>这件事是如何进行的？</li><li>……</li></ul></li><li><strong>实用性问题：</strong><ul><li>有哪些结果可以选择?</li><li>应该采取什么样的手段才能获得某种结果?</li><li>要达到某个目的,应该采取哪些行动?以什么顺序?</li><li>在这些条件下,什么事是对的,或怎样才会更好,而不是更糟?</li><li>在什么样的条件下,这样做会比那样做好一些?</li><li>……</li></ul></li></ul></li></ul><h5 id="总结-分析阅读的第一个阶段"><a href="#总结-分析阅读的第一个阶段" class="headerlink" title="总结    分析阅读的第一个阶段"></a><em>总结 分析阅读的第一个阶段</em></h5><p><strong><em>分析阅读的第一阶段，或，找出一本书在谈些什么的四个规则：</em></strong><br><strong><em>(1)依照书本的种类与主题作分类。</em></strong><br><strong><em>(2)用最简短的句子说出整本书在谈些什么。</em></strong><br><strong><em>(3)按照顺序与关系,列出全书的重要部分。将全书的纲要拟出来之后，再将各个部分的纲要也——列出。</em></strong><br><strong><em>(4)找出作者在问的问题,或作者想要解决的问题。</em></strong></p><p><em>每天进步一点点！！！</em></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>阅读技巧</category>
        <category>分析阅读</category>
      </categories>
      <tags>
        <tag>阅读</tag>
      </tags>
  </entry>
</search>
